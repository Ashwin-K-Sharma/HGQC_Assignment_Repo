# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WNfE8AOSSchbb4snKUGbWfflaBHtTfSX
"""

import numpy as np
import matplotlib.pyplot as plt
value_of_qubit=[]
def in_qubit():
  recursion=False
  while not recursion:
    qubit=int(input("Enter the value of qubit "))
    value_of_qubit.append(qubit)
    passes=input("accept or reject ")
    if passes=='reject':
      recursion=True
  return value_of_qubit
in_qubit()
bra_of_in_qubit=np.array([value_of_qubit])
ket_of_in_qubit=bra_of_in_qubit.transpose()
print("the qubits are : \n",ket_of_in_qubit)
print()
'''ket_0=np.array([[1],[0]])
print(ket_0)
ket_1=np.array([[0],[1]])
print(ket_1)
bra_0=ket_0.transpose()
print(bra_0)
bra_1=ket_1.transpose()
print(bra_1)'''
def inspect_validity(qubit):
    inner_product=np.dot(qubit,qubit.transpose())
    try:
        if inner_product==1:
            print('Valid')
    except:
        print('Invalid')

#basis=np.array([[0.2],[0.8]])
#inspect_validity(basis)
density=np.kron(ket_of_in_qubit,bra_of_in_qubit)
print("density of qbit:\n",density)

inspect_validity(bra_of_in_qubit)

