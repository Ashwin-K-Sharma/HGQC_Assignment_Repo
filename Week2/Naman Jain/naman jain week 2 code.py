# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bREcXDsoDGSvarUHDBVYKuh8AFtpRFD1
"""

import numpy as np
import matplotlib.pyplot as plt

ket_basis_0=np.array([[1],[0]])
print(ket_basis_0)

ket_basis_1=np.array([[0],[1]])
print(ket_basis_1)

def check_validity(qubit):
  inner_product=np.dot(qubit,qubit.conjugate().transpose())
  if inner_product==1:
    print("Tne entered qubit is Valid")
  else:
    print("The entered qubit is Invalid")

def inner_product(qubit):
  inner_product=np.dot(qubit,qubit.conjugate().transpose())
  print(inner_product)

# Take input qubit from the user
list_qubit_value=[]
def input_qubit():
  repeat=False
  while not repeat:
    qubit_value=int(input("Enter qubit value: "))
    list_qubit_value.append(qubit_value)
    cntinue=input("Continue yes(y) or no(n): ")
    if cntinue=='n':
      repeat=True
  return list_qubit_value

input_qubit()
bra_input_qubit=np.array([list_qubit_value])
ket_input_qubit=bra_input_qubit.conjugate().transpose()
print("Your qubit is: \n",ket_input_qubit)
print()
inner_product(bra_input_qubit)
check_validity(bra_input_qubit)

density_matrix=np.kron(ket_input_qubit,bra_input_qubit)
print("The density matrix of the qubit is: \n",density_matrix)
